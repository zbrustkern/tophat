name: Firebase Deploy

on:
 push:
   branches:
     - staging-workflow
 pull_request:
   branches:
     - staging-workflow

jobs:
 build:
   runs-on: ubuntu-latest
   steps:
     - uses: actions/checkout@v4
     
     - name: Setup Node.js
       uses: actions/setup-node@v4
       with:
         node-version: '20'
         cache: 'npm'
         
     - name: Install Dependencies
       run: npm ci
       
     - name: Build Staging
       env:
         NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
         NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
         NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
         NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
         NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
         NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
         NEXT_PUBLIC_FIREBASE_ENVIRONMENT: 'staging'
       run: npm run build
       
     - name: Upload Build Artifact
       uses: actions/upload-artifact@v4
       with:
         name: build
         path: |
           .next/
           package.json
           package-lock.json
           next.config.js
           public/
         if-no-files-found: error
         
 deploy_staging:
   needs: build
   if: github.ref == 'refs/heads/staging-workflow'
   runs-on: ubuntu-latest
   environment:
     name: staging
     url: ${{ steps.deploy-to-firebase.outputs.url }}
   steps:
     - uses: actions/checkout@v4
     
     - name: Download Build Artifact
       uses: actions/download-artifact@v4
       with:
         name: build
         path: .next
    
     - name: Deploy to Firebase Staging
       id: deploy-to-firebase
       uses: FirebaseExtended/action-hosting-deploy@v0
       with:
         repoToken: '${{ secrets.GITHUB_TOKEN }}'
         firebaseServiceAccount: '${{ fromJSON(secrets.FIREBASE_SERVICE_ACCOUNT) }}'
         projectId: '${{ fromJSON(secrets.FIREBASE_SERVICE_ACCOUNT).project_id }}'
         channelId: live